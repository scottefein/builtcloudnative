{
  "publishedAt": "11th Apr 2021",
  "title": "Why You Need an Internal Developer Portal: The Solution (Part 2)",
  "seoDescription": "The best thing you can do for your developers is to free them from the tyranny of managing infrastructure. But how?",
  "seoMetaImage": "/images/uploads/architecture-train-ride-railway-station-platform-bahnsteigkante-railway-traffic.jpg",
  "content": "Now that we've established why you need a developer portal, what does this actually look like in practice?\n\nNetflix, in their early adoption of AWS, developed Spinnaker to largely serve the role of an internal developer portal, focused on the Continuous Delivery angle. Spinnaker bakes in immutable images, automated deployment strategies and pipelines, and has a concept of \"applications\" to abstract away the specific infrastructure components that make up deploying a micro-service. [](https://spinnaker.io/guides/tutorials/codelabs/hello-deployment/)\n\n[![](https://spinnaker.io/guides/tutorials/codelabs/hello-deployment/flow.png)](https://spinnaker.io/guides/tutorials/codelabs/hello-deployment/)\n\nWhile Spinnaker is a fantastic Continuous Delivery platform, it also operates as the single pane of glass through the concept of \"clusters\".\n\n[![](https://spinnaker.io/concepts/clusters/clusters.png)](https://spinnaker.io/concepts/clusters/)\n\nThis is a huge step up for developers. Before Spinnaker, you would have been going to Jenkins to view the results of a deployment job (or failure) or having to remember what deployment platform (and region, cluster name, project/account...). Instead you can get all of this in the same window from Spinnaker. \n\nNew entrants to this space include Backstage, developed by Spotify, which is currently in Sandbox phase under the CNCF.  Backstage takes a different approach from Spinnaker, in the sense that from an infrastructure standpoint, it actually does absolutely nothing out of the box. If you want CI, you have to install a plugin for the CI platform of your choice. There's no deployment platforms, you have to integrate with the CD platform of your choice. \n\nInstead, Backstage out of the box provides a tool for developer documentation, a tool to \"scaffold\" a new app from a template, and a service catalog for tracking metadata and making internal services discover-able. You then choose the services you're using - AWS Lambda, Kubernetes, CircleCI, ArgoCD - and then integrate them as plugins. And if you want to bring in something custom, you can develop new functionality through the well-defined plugin architecture. You could even integrate Spinnaker into Backstage if you wanted to!\n\nIn the next post, we'll talk about how to think about building a developer portal so it can have the most impact for the developers in your organization. \n\n[Part 1](https://builtcloudnative.com/blog/why-you-need-an-internal-developer-platform-the-problem-part-1-1)\n\n[Part 2](https://builtcloudnative.com/blog/why-you-need-an-internal-developer-platform-the-solution-part-2)\n\n[Part 3](https://builtcloudnative.com/blog/why-you-need-an-internal-developer-portal-product-mindset-part-3)\n\n[](https://spinnaker.io/concepts/clusters/)[](https://spinnaker.io/concepts/clusters/)"
}